"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPackages = getPackages;
exports.SVELTE = exports.VUE = exports.JAVASCRIPT = exports.TYPESCRIPT = void 0;

var _cheerio = _interopRequireDefault(require("cheerio"));

var _babelParser = require("./babelParser");

var TYPESCRIPT = 'typescript';
exports.TYPESCRIPT = TYPESCRIPT;
var JAVASCRIPT = 'javascript';
exports.JAVASCRIPT = JAVASCRIPT;
var VUE = 'vue';
exports.VUE = VUE;
var SVELTE = 'svelte';
exports.SVELTE = SVELTE;

function extractScriptFromHtml(html) {
  try {
    var $ = _cheerio["default"].load(html);

    var code = $('script').html();
    return code;
  } catch (e) {
    console.error("ERR", e);
    return '';
  }
}

function getScriptTagLineNumber(html) {
  var splitted = html.split('\n');

  for (var i = 0; i < splitted.length; i++) {
    if (/\<script/.test(splitted[i])) {
      return i;
    }
  }

  return 0;
}

function getPackages(fileName, source, language) {
  if ([SVELTE, VUE].some(function (l) {
    return l === language;
  })) {
    var scriptSource = extractScriptFromHtml(source);
    var scriptLine = getScriptTagLineNumber(source);
    return (0, _babelParser.getPackages)(fileName, scriptSource, TYPESCRIPT, scriptLine);
  } else if ([TYPESCRIPT, JAVASCRIPT].some(function (l) {
    return l === language;
  })) {
    return (0, _babelParser.getPackages)(fileName, source, language);
  } else {
    return [];
  }
}