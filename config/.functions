#!/bin/bash



# clean bash & zsh history file
function f_clean_history() {
  if [ "$1" = "--zsh" ] ; then 
    printf "\n" > .zsh_history
  elif [ "$1" = "--bash" ] ; 
    then printf "\n" > .bash_history
  else 
    printf "\n" > .zsh_history
    printf "\n" > .bash_history 
  fi
}

# (git) clone a repository by name using ssh & go into it
function f_gclcd() {
  git clone "git@github.com:blyndusk/$1.git"
  cd $1
}

# create a new localhost with specific port
function f_host() {
  if [ "$*" ] ; then 
    php -S localhost:"$1"
  else 
    php -S localhost:8000
  fi
}

# create a new folder & go into it
function f_mkdr() { 
  mkdir -p "$@"
  cd "$_" || exit
}

# open pwd directory by default, or specified file, directory or application
function f_o() {
	if [ $# -eq 0 ] ; then 
    open .
	else 
    open "$@"
  fi
}

# delete the downloaded files
function f_rmdll() {
  DLL="$HOME/Downloads/*"
	DLL_DOT="$HOME/Downloads/.*"
	if [ "${#DLL[@]}" -gt 0 ] ; then 
    rm -rf ~/Downloads/*
  fi
	if [ "${#DLL_DOT[@]}" -gt 0 ] ; then 
    rm -rf ~/Downloads/.*
  fi
}

# delete all the .DS_Store in the directory
function f_rmds() {
  find ./ -type f -not -path '*Library*' -name '.DS_Store' -delete
}

# delete all trash content
function f_trash() {
	TRASH="$HOME/.Trash/*"
	TRASH_DOT="$HOME/.Trash/.*"
	if [ "${#TRASH[@]}" -gt 0 ] ; then
    rm -rf ~/.Trash/*
  fi
	if [ "${#TRASH_DOT[@]}" -gt 0 ] ; then
    rm -rf ~/.Trash/.*
  fi
}

# open Visual Studio code with given param, otherwise open the current directory
function f_code() {
	if [ $# -eq 0 ] ; then code . ;
	else code "$@" ; fi ;
}

# zip the given folder
function f_zip() {
	zip -r "$1.zip" "$1";
}

# create a new bash script
function newsh() {
	FILE=/usr/local/bin/"$1"
	touch "$FILE" ; chmod a+rx "$FILE"
	echo "#!/usr/local/bin/bash" > "$FILE"
}

function chsh() {
  local pwd=/Users/alexandre.delaloy/_/PERSO/cheatsheets/
  cd $pwd
  source ${pwdd}woo.sh
  cd -
}